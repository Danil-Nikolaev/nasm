     1                                      section .data
     2 00000000 507265737320456E74-     ExitMsg db "Press Enter to Exit",10
     2 00000009 657220746F20457869-
     2 00000012 740A               
     3                                  lenExit equ $-ExitMsg
     4                                  ; Добавление переменных A, B для вычисления выражение
     5                                  ; X = A + 5 - B
     6 00000014 E2FF                    A dw -30
     7 00000016 1500                    B dw 21
     8                                  
     9 00000018 FF                      val1 db 255
    10 00000019 0001                    chart dw 256
    11 0000001B 80FF                    lue3 dw -128
    12 0000001D 10                      v5 db 10h
    13 0000001E 25                      db 100101B
    14 0000001F 17230C                  beta db 23,23h,0ch
    15 00000022 48656C6C6F0A            sdk db "Hello",10
    16 00000028 0180                    min dw -32767
    17 0000002A 78563412                ar dd 12345678h
    18 0000002E 08<rep 5h>              valar times 5 db 8
    19                                  
    20 00000033 E7FF                    val2 dw -25
    21 00000035 DDFFFFFF                val3 dd -35
    22 00000039 D094D0B0D0BDD0B8D0-     name db "Данил Danil", 0
    22 00000042 BB2044616E696C00   
    23                                  
    24 0000004A 2500                    val4 dw 37
    25 0000004C 0025                    val5 dw 9472
    26                                  
    27 0000004E 2500                    val6 dw 00100101b
    28 00000050 0025                    val7 dw 0010010100000000b
    29                                  
    30 00000052 0025                    val8 dw 2500h
    31 00000054 2500                    val9 dw 0025h
    32                                  
    33 00000056 FFFF                    F1 dw 65535
    34 00000058 FFFF0000                F2 dd 65535
    35                                  
    36 0000005C 0500FBFF                five dw 5, -5
    37                                  
    38                                  ; сегмент не инициализированных переменных
    39                                      section .bss
    40 00000000 <res Ah>                InBuf   resb    10    
    41                                  lenIn   equ     $-InBuf 
    42                                  ; Зарезервируем место для переменной X
    43 0000000A ????????                X resd 1
    44 0000000E <res 14h>               alu resw 10
    45 00000022 ??????????              f1 resb 5
    46                                  
    47                                      section .text ; сегмент кода
    48                                  global _start
    49                                  _start:
    50 00000000 A1[14000000]            mov EAX,[A] ; загрузить число A в регистр EAX
    51 00000005 83C005                  add EAX,5
    52 00000008 2B05[16000000]          sub EAX,[B] ; вычесть число B, результат в EAX
    53 0000000E A3[0A000000]            mov [X],EAX ; сохранить результат в памяти
    54 00000013 A1[56000000]            mov EAX, [F1]
    55 00000018 83C001                  add EAX,1
    56 0000001B A1[58000000]            mov EAX, [F2]
    57 00000020 83C001                  add EAX,1
    58 00000023 66A1[5C000000]          mov AX, [five]
    59 00000029 66A1[5E000000]          mov ax, [five + 2]
    60                                  ; write
    61 0000002F B804000000              mov     eax, 4          
    62 00000034 BB01000000              mov     ebx, 1          
    63 00000039 B9[00000000]            mov     ecx, ExitMsg   
    64 0000003E BA14000000              mov     edx, lenExit 
    65 00000043 CD80                    int     80h             
    66                                  ; read
    67 00000045 B803000000              mov     eax, 3       
    68 0000004A BB00000000              mov     ebx, 0         
    69 0000004F B9[00000000]            mov     ecx, InBuf     
    70 00000054 BA0A000000              mov     edx, lenIn    
    71 00000059 CD80                    int     80h           
    72                                  ; exit
    73 0000005B B801000000              mov     eax, 1       
    74 00000060 31DB                    xor     ebx, ebx   
    75 00000062 CD80                    int     80h   
